C51 COMPILER V9.52.0.0   UART                                                              05/07/2021 15:15:28 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE UART
OBJECT MODULE PLACED IN .\Output\uart.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\..\..\..\Library\StdDriver\src\uart.c LARGE OMF2 BROWSE INCDIR(..\..\Com
                    -mon;..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\List\uart.lst) TABS(2) OBJECT(.\
                    -Output\uart.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2021 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          //********************************************************************************************************
             -***
   8          //  Nuvoton Technoledge Corp. 
   9          //  Website: http://www.nuvoton.com
  10          //  E-Mail : MicroC-8bit@nuvoton.com
  11          //  Date   : Apr/29/2021
  12          //********************************************************************************************************
             -***
  13          
  14          #include "MUG51.h"
  15          bit UART0PRINTFG=0,UART1PRINTFG=0, uart0_receive_flag = 0, uart1_receive_flag;
  16          unsigned char uart0_receive_data, uart1_receive_data;
  17          
  18          
  19          void Enable_UART0_VCOM_printf(void)
  20          {
  21   1        /* UART0 initial setting
  22   1        ** include uart.c in Library for UART initial setting
  23   1        **UART0 define P3.1 TXD multi function setting
  24   1        **/
  25   1          MFP_P31_UART0_TXD;
  26   1          P31_QUASI_MODE;
  27   1          UART_Open(9126000,UART0_Timer3,115200);
  28   1          ENABLE_UART0_PRINTF;
  29   1      }
  30          
  31          void Enable_UART0_VCOM_38400_printf(void)
  32          {
  33   1        /* UART0 initial setting
  34   1        ** include uart.c in Library for UART initial setting
  35   1        **UART0 define P3.1 TXD multi function setting
  36   1        **/
  37   1          MFP_P31_UART0_TXD;
  38   1          P31_QUASI_MODE;
  39   1          UART_Open(8000000,UART0_Timer3,38400);
  40   1          ENABLE_UART0_PRINTF;
  41   1      }
  42          /* UART0 interrupt subroutine */
  43          
  44          /**
  45           * @brief       UART0 interrupt subroutine
  46           * @param       UART0~3, baudrate value
C51 COMPILER V9.52.0.0   UART                                                              05/07/2021 15:15:28 PAGE 2   

  47           * @return      none
  48           * @details     none
  49           * @note        Since printf function TI must be 1. Check with printf flag, for printf enable, not clear T
             -I . 
  50           */
  51          void UART0_ISR(void) interrupt 4
  52          {
  53   1          _push_(SFRS);
  54   1          if (RI)
  55   1          {
  56   2              uart0_receive_flag = 1;
  57   2              uart0_receive_data = SBUF;
  58   2              clr_SCON_RI;                                         // Clear RI (Receive Interrupt).
  59   2          }
  60   1          if (TI)
  61   1          {
  62   2      //        if (!UART0PRINTFG)
  63   2      //            TI = 0;
  64   2          }
  65   1          _pop_(SFRS);
  66   1      }
  67          
  68          
  69          /* UART1 interrupt subroutine */
  70          void UART1_ISR(void) interrupt 15
  71          {
  72   1          _push_(SFRS);
  73   1          if (RI_1)
  74   1          {
  75   2              uart1_receive_flag = 1;
  76   2              uart1_receive_data = SBUF1;
  77   2              RI_1=0;                             /* clear reception flag for next reception */
  78   2          }
  79   1          if (TI_1)
  80   1              if (!UART1PRINTFG)
  81   1                  TI_1 = 0;                       /* if emission occur */
  82   1          _pop_(SFRS);
  83   1      }
  84          
  85          /**
  86           * @brief       UART no interrupt enable setting 
  87           * @param       UART0~3, baudrate value
  88           * @return      none
  89           * @details     none
  90           * @note        max baud rate = 1.5MHz when Fsys = 24MHz
  91           */
  92          //********************************************************************************************************
             -********  
  93          //**** UART Enable Setting  
  94          //**** 1. Define Fsys value(value)
  95          //**** 2. Select UART port(UART0_Timer1 / UART0_Timer3 / UART1_Timer3 / UART2/UART3) 
  96          //**** 3. Define baudrate (value)
  97          //**** For example: UART_Open(24000000,UART0_Timer1,115200)
  98          void UART_Open(unsigned long u32SysClock, unsigned char u8UARTPort,unsigned long u32Baudrate)
  99          {
 100   1        switch(u8UARTPort)
 101   1        {
 102   2            case UART0_Timer1:
 103   2            case UART0:
 104   2                SFRS = 0x00;
 105   2                SCON = 0x50;             /*UART0 Mode1,REN=1,TI=1 */
 106   2                TMOD |= 0x20;            /*Timer1 Mode1*/
C51 COMPILER V9.52.0.0   UART                                                              05/07/2021 15:15:28 PAGE 3   

 107   2                set_PCON_SMOD;          /*UART0 Double Rate Enable*/
 108   2                set_CKCON_T1M;
 109   2                clr_T3CON_BRCK;          /*Serial port 0 baud rate clock source = Timer1*/
 110   2                TH1 = 256 - (u32SysClock/16/u32Baudrate);
 111   2                set_TCON_TR1;
 112   2            break;
 113   2            case UART0_Timer3:
 114   2                SFRS = 0x00;
 115   2                SCON = 0x50;            /*UART0 Mode1,REN=1,TI=1*/
 116   2                set_PCON_SMOD;          /*UART0 Double Rate Enable*/
 117   2                T3CON &= 0xF8;          /*T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1)*/
 118   2                set_T3CON_BRCK;         /*UART0 baud rate clock source = Timer3*/
 119   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));
 120   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));
 121   2                set_T3CON_TR3;          /*Trigger Timer3*/
 122   2            break;
 123   2            case UART1_Timer3:
 124   2            case UART1:
 125   2                SFRS = 0x00;
 126   2                S1CON = 0x50;           /*UART1 Mode1,REN_1=1 */
 127   2                T3CON = 0x88;           /*T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1*/
 128   2                RH3    = HIBYTE(65536 - (u32SysClock/16/u32Baudrate));
 129   2                RL3    = LOBYTE(65536 - (u32SysClock/16/u32Baudrate));
 130   2                set_T3CON_TR3;          /* Trigger Timer3 */
 131   2            break; 
 132   2      
 133   2        }
 134   1      }
 135          //********************************************************************************************************
             -********  
 136          //**** UART Receive data without interrupt  
 137          //**** For example: UART_Open(UART0_Timer1,1200)
 138          unsigned char UART_Receive_Data(unsigned char UARTPort)
 139          {
 140   1          unsigned char c;
 141   1          SFRS = 0x00;
 142   1          switch (UARTPort)
 143   1          {
 144   2            case UART0:
 145   2              while (!RI);
 146   2              c = SBUF;
 147   2              RI = 0;
 148   2            break;
 149   2            case UART1:
 150   2              while (!RI_1);
 151   2              c = SBUF1;
 152   2              RI_1 = 0;
 153   2            break;
 154   2          }
 155   1          return (c);
 156   1      }
 157          //********************************************************************************************************
             -********  
 158          //**** UART transfer data without interrupt  
 159          //**** For example: UART_Send_Data(UART0,0x55)
 160          void UART_Send_Data(unsigned char UARTPort, unsigned char c)
 161          {
 162   1          SFRS = 0x00;
 163   1          switch (UARTPort)
 164   1          {
 165   2            case UART0:
 166   2              TI = 0;
C51 COMPILER V9.52.0.0   UART                                                              05/07/2021 15:15:28 PAGE 4   

 167   2              SBUF = c;
 168   2              while(TI==0);
 169   2              TI = 0;
 170   2            break;
 171   2            case UART1:
 172   2              TI_1 = 0;
 173   2              SBUF1 = c;
 174   2              while(TI_1==0);
 175   2              TI_1 = 0;
 176   2            break;
 177   2          }
 178   1      }
 179          
 180          
 181          /**
 182           * @brief       UART interrupt enable setting 
 183           * @param       u8UARTPort: UART0/UART1/UART2/UART3 baudrate value
 184           * @param       u8UARTINTStatus: Disable/Enable
 185           * @return      none
 186           * @details     none
 187           * @note        max baud rate = 1.5MHz when Fsys = 24MHz
 188           */
 189          void UART_Interrupt_Enable(unsigned char u8UARTPort, unsigned char u8UARTINTStatus)
 190          {
 191   1          switch (u8UARTPort)
 192   1          {
 193   2              case UART0: 
 194   2                switch(u8UARTINTStatus)
 195   2                {
 196   3                  case Disable: clr_IE_ES; break;
 197   3                  case Enable:  set_IE_ES; break;
 198   3                }
 199   2              break;
 200   2              case UART1:
 201   2                switch(u8UARTINTStatus)
 202   2                {
 203   3                  case Disable: clr_EIE1_ES1; break;
 204   3                  case Enable:  set_EIE1_ES1; break;
 205   3                }
 206   2              break;
 207   2          }
 208   1      }
 209          
 210          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    522    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      2       9
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
