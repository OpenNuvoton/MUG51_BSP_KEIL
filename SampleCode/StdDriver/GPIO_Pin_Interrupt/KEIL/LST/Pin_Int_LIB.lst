C51 COMPILER V9.60.0.0   PIN_INT_LIB                                                       11/03/2022 13:32:57 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE PIN_INT_LIB
OBJECT MODULE PLACED IN .\Output\Pin_Int_LIB.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Pin_Int_LIB.C LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\..\..\
                    -Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\Pin_Int_LIB.lst) TABS(2) OBJECT(.\Output\Pin
                    -_Int_LIB.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2022 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: MUG51 Pin interrupt demo
  10          //********************************************************************************************************
             -***
  11          #include "MUG51.h"
  12          
  13          unsigned char PinIntFlag;
  14          
  15          /******************************************************************************
  16          Pin interrupt subroutine.
  17          ******************************************************************************/
  18          void PinInterrupt_ISR (void) interrupt 7
  19          {
  20   1          _push_(SFRS);
  21   1      
  22   1          SFRS = 0;
  23   1          switch(PIF)
  24   1          {
  25   2            case (SET_BIT0): PinIntFlag = SET_BIT0; PIF&=CLR_BIT0; break;
  26   2            case (SET_BIT2): PinIntFlag = SET_BIT2; PIF&=CLR_BIT2; break;
  27   2            default: break;
  28   2          }
  29   1      
  30   1          _pop_(SFRS);
  31   1      }
  32          /******************************************************************************
  33          The main C function.  Program execution starts
  34          here after stack initialization.
  35          ******************************************************************************/
  36          void main (void) 
  37          {
  38   1        /* UART0 initial for printf */
  39   1          Enable_P31_UART0_VCOM_115200_printf();
  40   1          printf("\n PIT test start!");
  41   1        /* Disable BOD for power down current */
  42   1          BOD_DISABLE;
  43   1      
  44   1        /* PIT initial setting */
  45   1          MFP_P17_GPIO;
C51 COMPILER V9.60.0.0   PIN_INT_LIB                                                       11/03/2022 13:32:57 PAGE 2   

  46   1          MFP_P25_GPIO;
  47   1      
  48   1          GPIO_SetMode(Port1,BIT7,GPIO_MODE_INPUT);
  49   1          GPIO_SetMode(Port2,BIT5,GPIO_MODE_INPUT);
  50   1          GPIO_Pull_Enable(Port1,BIT7,PULLUP);
  51   1          GPIO_Pull_Enable(Port2,BIT5,PULLDOWN);
  52   1          GPIO_EnableInt(PIT0,FALLING,EDGE,Port1,7);
  53   1          GPIO_EnableInt(PIT2,HIGH,LEVEL,Port2,5);
  54   1      
  55   1          ENABLE_GLOBAL_INTERRUPT;                // global enable bit
  56   1          while(1)
  57   1          {
  58   2             set_PCON_PD;
  59   2             _nop_();
  60   2             _nop_();
  61   2      
  62   2            switch(PinIntFlag)
  63   2            {
  64   3              case (SET_BIT0): printf("\n PIT0 interrupt!"); PinIntFlag&=CLR_BIT0; break;
  65   3              case (SET_BIT2): printf("\n PIT2 interrupt!"); PinIntFlag&=CLR_BIT2; break;
  66   3              default: break;
  67   3            }
  68   2          }
  69   1      }
  70          
  71          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    239    ----
   CONSTANT SIZE    =     54    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
