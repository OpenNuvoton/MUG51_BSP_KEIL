C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ISP_RS485_MAIN_AUTOSIZE
OBJECT MODULE PLACED IN .\Output\ISP_rs485_main_autosize.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\ISP_rs485_main_autosize.c LARGE OMF2 ROM(COMPACT) OPTIMIZE(7,SPEED) B
                    -ROWSE INCDIR(..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc;..\..\ISP_UART1) DEBUG PRINT(.\LST\ISP
                    -_rs485_main_autosize.lst) TABS(2) OBJECT(.\Output\ISP_rs485_main_autosize.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2021 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: MUG51 UART0 ISP demo code
  10          //********************************************************************************************************
             -***
  11          #include "MUG51.h"
  12          #include "isp_rs485.h"
  13          
  14          /* define for MCU with WDT fucntion enable */
  15          //#define  isp_with_wdt
  16          
  17          /* define for RS485 */
  18          #define nRTSPin                 P25
  19          #define RECEIVE_MODE            0
  20          #define TRANSMIT_MODE           1
  21          
  22          /*********************************************************************************************************
             -***
  23          *    Main function 
  24          **********************************************************************************************************
             -**/
  25          unsigned int xdata start_address,u16_addr;
  26          
  27          void main (void)
  28          {
  29   1        /*Assign RTS pin to P25 */
  30   1        P25_PUSHPULL_MODE;
  31   1        nRTSPin = RECEIVE_MODE;
  32   1         //uart initial for ISP programmer GUI, always use 115200 baudrate
  33   1        UART1_ini_115200();
  34   1        TM0_ini();
  35   1      
  36   1        g_timer0Over=0;
  37   1        g_timer0Counter=800;
  38   1        g_programflag=0;
  39   1      
  40   1        set_CHPCON_IAPEN;
  41   1      
  42   1      while(1)
  43   1      {
  44   2              if(bUartDataReady == TRUE)
C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 2   

  45   2              {
  46   3                EA=0; //DISABLE ALL INTERRUPT                  
  47   3                if(g_programflag==1)
  48   3                {
  49   4                  for(count=8;count<64;count++)
  50   4                  {
  51   5                    IAPCN = BYTE_PROGRAM_AP;          //program byte
  52   5                    IAPAL = flash_address&0xff;
  53   5                    IAPAH = (flash_address>>8)&0xff;
  54   5                    IAPFD=uart_rcvbuf[count];
  55   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
  58   5                    set_IAPTRG_IAPGO;
  59   5      #endif
  60   5                
  61   5                    IAPCN = BYTE_READ_AP;              //program byte verify
  62   5                    set_IAPTRG_IAPGO;
  63   5                    if(IAPFD!=uart_rcvbuf[count])
  64   5                    while(1);
  65   5                    if (CHPCON==0x43)              //if error flag set, program error stop ISP
  66   5                    while(1);
  67   5                    
  68   5                    g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
  69   5                    flash_address++;
  70   5        
  71   5                    if(flash_address==AP_size)
  72   5                    {
  73   6                      g_programflag=0;
  74   6                      g_timer0Over=1;
  75   6                      goto END_2;
  76   6                    }
  77   5                  } 
  78   4      END_2:                
  79   4                  Package_checksum();
  80   4                  uart_txbuf[8]=g_totalchecksum&0xff;
  81   4                  uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
  82   4                  nRTSPin = TRANSMIT_MODE;
  83   4                  Send_64byte_To_UART1();
  84   4                  nRTSPin = RECEIVE_MODE;
  85   4                  
  86   4                }
  87   3                  
  88   3                switch(uart_rcvbuf[0])
  89   3                {                
  90   4                  case CMD_CONNECT:
  91   4                  case CMD_SYNC_PACKNO:
  92   4                  {
  93   5                    Package_checksum();
  94   5                    nRTSPin = TRANSMIT_MODE;
  95   5                    Send_64byte_To_UART1();
  96   5                    nRTSPin = RECEIVE_MODE;
  97   5                    g_timer0Counter=0; //clear timer 0 for no reset
  98   5                    g_timer0Over=0;
  99   5                  break;
 100   5                  }
 101   4      
 102   4                  case CMD_GET_FWVER:
 103   4                  {
 104   5                    Package_checksum();
 105   5                    uart_txbuf[8]=FW_VERSION;  
 106   5                    nRTSPin = TRANSMIT_MODE;
C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 3   

 107   5                    Send_64byte_To_UART1();
 108   5                    nRTSPin = RECEIVE_MODE;  
 109   5                  break;
 110   5                  }
 111   4                  
 112   4                  case CMD_RUN_APROM:
 113   4                  {
 114   5                    goto _APROM;
 115   5                  break;
 116   5                  }
 117   4          
 118   4                  //please for ISP programmer GUI, ID always use following rule to transmit.
 119   4                  case CMD_GET_DEVICEID:
 120   4                  {
 121   5                    READ_ID();
 122   5                    Package_checksum();
 123   5                    uart_txbuf[8]=DID_lowB;  
 124   5                    uart_txbuf[9]=DID_highB;  
 125   5                    uart_txbuf[10]=PID_lowB;  
 126   5                    uart_txbuf[11]=PID_highB;  
 127   5                    nRTSPin = TRANSMIT_MODE;
 128   5                    Send_64byte_To_UART1();
 129   5                    nRTSPin = RECEIVE_MODE;
 130   5                    break;
 131   5                  }
 132   4                  case CMD_ERASE_ALL:
 133   4                  {
 134   5      //              set_CHPCON_IAPEN;
 135   5                    set_IAPUEN_APUEN;
 136   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 137   5                    IAPCN = PAGE_ERASE_AP;
 138   5                    
 139   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 140   5                    {        
 141   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 142   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 143   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 146   6                    set_IAPTRG_IAPGO;
 147   6      #endif
 148   6                    }            
 149   5                    
 150   5                    Package_checksum();
 151   5                    nRTSPin = TRANSMIT_MODE;
 152   5                    Send_64byte_To_UART1();
 153   5                    nRTSPin = RECEIVE_MODE;
 154   5                    break;
 155   5                  }
 156   4                  case CMD_READ_CONFIG:
 157   4                  {
 158   5                    READ_CONFIG();
 159   5                    Package_checksum();
 160   5                    uart_txbuf[8]=CONF0;  
 161   5                    uart_txbuf[9]=CONF1;  
 162   5                    uart_txbuf[10]=CONF2;  
 163   5                    uart_txbuf[11]=0xff;  
 164   5                    uart_txbuf[12]=CONF4;  
 165   5                    uart_txbuf[13]=0xff;  
 166   5                    uart_txbuf[14]=0xff;            
 167   5                    uart_txbuf[15]=0xff;
 168   5                    nRTSPin = TRANSMIT_MODE;
C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 4   

 169   5                    Send_64byte_To_UART1();
 170   5                    nRTSPin = RECEIVE_MODE;
 171   5                  break;
 172   5                  }
 173   4                  
 174   4                  case CMD_UPDATE_CONFIG:
 175   4                  {
 176   5                    recv_CONF0 = uart_rcvbuf[8];
 177   5                    recv_CONF1 = uart_rcvbuf[9];
 178   5                    recv_CONF2 = uart_rcvbuf[10];
 179   5                    recv_CONF4 = uart_rcvbuf[12];
 180   5      /*Erase CONFIG */              
 181   5      //              set_CHPCON_IAPEN;
 182   5                    set_IAPUEN_CFUEN;
 183   5                    IAPCN = PAGE_ERASE_CONFIG;
 184   5                    IAPAL = 0x00;
 185   5                    IAPAH = 0x00;
 186   5                    IAPFD = 0xFF;
 187   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 190   5                    set_IAPTRG_IAPGO;
 191   5      #endif
 192   5      /*Program CONFIG*/  
 193   5                    IAPCN = BYTE_PROGRAM_CONFIG;
 194   5                    IAPAL = 0x00;
 195   5                    IAPAH = 0x00;
 196   5                    IAPFD = recv_CONF0;
 197   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 200   5                    set_IAPTRG_IAPGO;
 201   5      #endif
 202   5                    IAPFD = recv_CONF1;
 203   5                    IAPAL = 0x01;
 204   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 207   5                    set_IAPTRG_IAPGO;
 208   5      #endif
 209   5                    IAPAL = 0x02;
 210   5                    IAPFD = recv_CONF2;
 211   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 214   5                    set_IAPTRG_IAPGO;
 215   5      #endif
 216   5                    IAPAL = 0x04;
 217   5                    IAPFD = recv_CONF4;
 218   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 221   5                    set_IAPTRG_IAPGO;
 222   5      #endif
 223   5                    clr_IAPUEN_CFUEN;
 224   5      /*Read new CONFIG*/  
 225   5                    READ_CONFIG();
 226   5                    
 227   5                    Package_checksum();
 228   5                    uart_txbuf[8]=CONF0;  
 229   5                    uart_txbuf[9]=CONF1;  
 230   5                    uart_txbuf[10]=CONF2;  
C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 5   

 231   5                    uart_txbuf[11]=0xff;  
 232   5                    uart_txbuf[12]=CONF4;  
 233   5                    uart_txbuf[13]=0xff;  
 234   5                    uart_txbuf[14]=0xff;            
 235   5                    uart_txbuf[15]=0xff;
 236   5                    nRTSPin = TRANSMIT_MODE;
 237   5                    Send_64byte_To_UART1();
 238   5                    nRTSPin = RECEIVE_MODE;
 239   5                    break;
 240   5                  }
 241   4                  
 242   4                  case CMD_UPDATE_APROM:
 243   4                  {
 244   5      //              set_CHPCON_IAPEN;
 245   5                    set_IAPUEN_APUEN;
 246   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 247   5                    IAPCN = PAGE_ERASE_AP;
 248   5                    
 249   5                    start_address = 0;
 250   5                    start_address = uart_rcvbuf[8];
 251   5                    start_address |= ((uart_rcvbuf[9]<<8)&0xFF00);
 252   5                    
 253   5                    AP_size = 0;
 254   5                    AP_size = uart_rcvbuf[12];
 255   5                    AP_size |= ((uart_rcvbuf[13]<<8)&0xFF00);
 256   5      
 257   5                    u16_addr = start_address + AP_size;
 258   5                    flash_address = (start_address&0xFF00);
 259   5       
 260   5                    while(flash_address< u16_addr)
 261   5                    {
 262   6                      IAPAL = LOBYTE(flash_address);
 263   6                      IAPAH = HIBYTE(flash_address);
 264   6      #ifdef isp_with_wdt
                              set_IAPTRG_IAPGO_WDCLR;
              #else
 267   6                      set_IAPTRG_IAPGO;
 268   6      #endif
 269   6                      flash_address += PAGE_SIZE;
 270   6                    }
 271   5                    
 272   5                    g_totalchecksum = 0;
 273   5                    flash_address = start_address;
 274   5                    g_programflag = 1;
 275   5      
 276   5                    for(count=16;count<64;count++)
 277   5                    {
 278   6                      IAPCN = BYTE_PROGRAM_AP;
 279   6                      IAPAL = flash_address&0xff;
 280   6                      IAPAH = (flash_address>>8)&0xff;
 281   6                      IAPFD = uart_rcvbuf[count];
 282   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 285   6                    set_IAPTRG_IAPGO;
 286   6      #endif
 287   6                      IAPCN = BYTE_READ_AP;                //program byte verify
 288   6                      set_IAPTRG_IAPGO;
 289   6      
 290   6                      if(IAPFD!=uart_rcvbuf[count])
 291   6                      while(1);          
 292   6                      if (CHPCON==0x43)                //if error flag set, program error stop ISP
C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 6   

 293   6                      while(1);
 294   6                      
 295   6                      g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
 296   6                      flash_address++;
 297   6                      
 298   6                      if(flash_address==AP_size)
 299   6                      {
 300   7                        g_programflag=0;
 301   7                         goto END_1;
 302   7                      }
 303   6                    }
 304   5      END_1:                
 305   5                    Package_checksum();
 306   5                    uart_txbuf[8]=g_totalchecksum&0xff;
 307   5                    uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
 308   5                    nRTSPin = TRANSMIT_MODE;
 309   5                    Send_64byte_To_UART1();
 310   5                    nRTSPin = RECEIVE_MODE;
 311   5                    break;
 312   5                  }
 313   4                }  
 314   3                bUartDataReady = FALSE;
 315   3                bufhead = 0;
 316   3                EA=1;
 317   3            }
 318   2            //For connect timer out  
 319   2            if(g_timer0Over==1)
 320   2            {       
 321   3             goto _APROM;
 322   3            }
 323   2      
 324   2            //for uart time out or buffer error
 325   2             if(g_timer1Over==1)
 326   2            {
 327   3             if((bufhead<64)&&(bufhead>0)||(bufhead>64))
 328   3               {
 329   4               bufhead=0;
 330   4               }
 331   3            }
 332   2      
 333   2      }
 334   1      
 335   1      _APROM:
 336   1          clr_CHPCON_IAPEN;
 337   1          TA = 0xAA;
 338   1          TA = 0x55;
 339   1          CHPCON &= 0xFD;                  //set boot from AP
 340   1          TA = 0xAA;
 341   1          TA = 0x55;
 342   1          CHPCON |= 0x80;                   //software reset enable
 343   1      
 344   1          /* Trap the CPU */
 345   1          while(1);  
 346   1      }
 347          
 348          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1369    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
C51 COMPILER V9.60.0.0   ISP_RS485_MAIN_AUTOSIZE                                           05/07/2021 15:20:20 PAGE 7   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
