C51 COMPILER V9.60.0.0   ISP_UART1                                                         11/03/2022 13:31:06 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ISP_UART1
OBJECT MODULE PLACED IN .\Output\isp_uart1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\isp_uart1.c LARGE OMF2 ROM(COMPACT) OPTIMIZE(7,SPEED) BROWSE INCDIR(.
                    -.\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc;..\..\ISP_UART1) DEBUG PRINT(.\LST\isp_uart1.lst) TA
                    -BS(2) OBJECT(.\Output\isp_uart1.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2022 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: MUG51 UART0 ISP subroutine
  10          //********************************************************************************************************
             -***
  11          #include "MUG51.h"
  12          #include "isp_uart2.h"
  13          
  14          xdata volatile uint8_t uart_rcvbuf[64]; 
  15          xdata volatile uint8_t uart_txbuf[64];
  16          data volatile uint8_t bufhead;
  17          data volatile uint16_t flash_address; 
  18          data volatile uint16_t AP_size;
  19          data volatile uint8_t g_timer1Counter;
  20          data volatile uint8_t count; 
  21          data volatile uint16_t g_timer0Counter;
  22          data volatile uint32_t g_checksum;
  23          data volatile uint32_t g_totalchecksum;
  24          bit volatile bUartDataReady;
  25          bit volatile g_timer0Over;
  26          bit volatile g_timer1Over;
  27          bit volatile g_programflag;
  28          bit BIT_TMP;
  29          unsigned char PID_highB,PID_lowB,DID_highB,DID_lowB,CONF0,CONF1,CONF2,CONF4;
  30          unsigned char recv_CONF0,recv_CONF1,recv_CONF2,recv_CONF4;
  31          
  32          void READ_ID(void)
  33          {
  34   1      //    set_CHPCON_IAPEN;
  35   1          IAPCN = READ_DID;
  36   1          IAPAH = 0x00;
  37   1          IAPAL = 0x00;
  38   1          set_IAPTRG_IAPGO;
  39   1          DID_lowB = IAPFD;
  40   1          IAPAL = 0x01;
  41   1          set_IAPTRG_IAPGO;
  42   1          DID_highB = IAPFD;
  43   1          IAPAL = 0x02;
  44   1          set_IAPTRG_IAPGO;
  45   1          PID_lowB = IAPFD;
C51 COMPILER V9.60.0.0   ISP_UART1                                                         11/03/2022 13:31:06 PAGE 2   

  46   1          IAPAL = 0x03;
  47   1          set_IAPTRG_IAPGO;
  48   1          PID_highB = IAPFD;
  49   1      }
  50          void READ_CONFIG(void)
  51          {
  52   1          IAPCN = BYTE_READ_CONFIG;
  53   1          IAPAL = 0x00;
  54   1          IAPAH = 0x00;
  55   1          set_IAPTRG_IAPGO;
  56   1          CONF0 = IAPFD;
  57   1          IAPAL = 0x01;
  58   1          set_IAPTRG_IAPGO;
  59   1          CONF1 = IAPFD;
  60   1          IAPAL = 0x02;
  61   1          set_IAPTRG_IAPGO;
  62   1          CONF2 = IAPFD;
  63   1          IAPAL = 0x04;
  64   1          set_IAPTRG_IAPGO;
  65   1          CONF4 = IAPFD;
  66   1      //    clr_CHPCON_IAPEN;
  67   1      }
  68          
  69          void TM0_ini(void)
  70          {    
  71   1        TH0=TL0=0;    //interrupt timer 140us
  72   1        set_TCON_TR0;      //Start timer0
  73   1        set_IPH_PSH;       // Serial port 0 interrupt level2
  74   1        set_IE_ET0;
  75   1      }
  76          
  77          
  78          void UART1_ini_115200(void)
  79          {
  80   1          MFP_P23_UART1_TXD;                              /* set P2.3 and P2.2 as Quasi mode for UART0 trasnfer 
             -*/
  81   1          MFP_P22_UART1_RXD;
  82   1          P23_QUASI_MODE;                                  
  83   1          P22_INPUT_MODE;
  84   1        
  85   1          SFRS = 0x00;
  86   1          S1CON = 0x50;           /*UART1 Mode1,REN_1=1 */
  87   1          T3CON = 0x88;           /*T3PS2=0,T3PS1=0,T3PS0=0(Prescale=1), UART1 in MODE 1*/
  88   1          clr_T3CON_BRCK;
  89   1          RH3    = HIBYTE(65536 - 13);;
  90   1          RL3    = LOBYTE(65536 - 13);
  91   1          set_T3CON_TR3;             //Trigger Timer3 
  92   1          set_EIE1_ES1;
  93   1          EA=1;
  94   1      }
  95          
  96          
  97          void Package_checksum(void)
  98          {
  99   1        g_checksum=0;
 100   1         for(count=0;count<64;count++)
 101   1        {
 102   2          g_checksum =g_checksum+ uart_rcvbuf[count];    
 103   2        }
 104   1        uart_txbuf[0]=g_checksum&0xff;
 105   1        uart_txbuf[1]=(g_checksum>>8)&0xff;
 106   1        uart_txbuf[4]=uart_rcvbuf[4]+1;
C51 COMPILER V9.60.0.0   ISP_UART1                                                         11/03/2022 13:31:06 PAGE 3   

 107   1        uart_txbuf[5]=uart_rcvbuf[5];
 108   1        if(uart_txbuf[4]==0x00)
 109   1        uart_txbuf[5]++;
 110   1        
 111   1      }
 112          
 113          
 114          void Send_64byte_To_UART1(void)
 115          {
 116   1        SFRS=0;
 117   1         for(count=0;count<64;count++)
 118   1        {
 119   2           TI_1 = 0;  
 120   2          SBUF1 = uart_txbuf[count];
 121   2          while(TI_1==0);
 122   2        }
 123   1      }
 124          
 125          void UART1_ISR (void) interrupt 15
 126          {
 127   1        SFRS=0;
 128   1          if (RI_1 == 1)
 129   1          {   
 130   2            uart_rcvbuf[bufhead++]=  SBUF1;    
 131   2            clr_S1CON_RI_1;                                         // Clear RI (Receive Interrupt).
 132   2          }
 133   1          if (TI_1 == 1)
 134   1          {       
 135   2              clr_S1CON_TI_1;                                         // Clear TI (Transmit Interrupt).
 136   2          }
 137   1          if(bufhead ==1)
 138   1          {
 139   2            g_timer1Over=0;
 140   2            g_timer1Counter=90; //for check uart timeout using
 141   2          }
 142   1        if(bufhead == 64)
 143   1          {
 144   2            bUartDataReady = TRUE;
 145   2            g_timer1Counter=0;
 146   2            g_timer1Over=0;
 147   2            bufhead = 0;
 148   2          }    
 149   1      }
 150          
 151          void Timer0_ISR (void) interrupt 1
 152          {
 153   1      //    _push_(SFRS);
 154   1        
 155   1      if(g_timer0Counter)
 156   1        {
 157   2        g_timer0Counter--;
 158   2          if(!g_timer0Counter)
 159   2          {
 160   3          g_timer0Over=1;
 161   3          }
 162   2        }
 163   1        
 164   1        if(g_timer1Counter)
 165   1        {
 166   2        g_timer1Counter--;
 167   2          if(!g_timer1Counter)
 168   2          {
C51 COMPILER V9.60.0.0   ISP_UART1                                                         11/03/2022 13:31:06 PAGE 4   

 169   3          g_timer1Over=1;
 170   3          }
 171   2        }
 172   1        
 173   1      //    _pop_(SFRS);
 174   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    625    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    140    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     17    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
