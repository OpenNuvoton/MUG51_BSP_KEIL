C51 COMPILER V9.52.0.0   ISP_UART0_MAIN_AUTOSIZE                                           05/07/2021 15:19:32 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_UART0_MAIN_AUTOSIZE
OBJECT MODULE PLACED IN .\Output\ISP_UART0_main_autosize.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\ISP_UART0_main_autosize.c LARGE OMF2 OPTIMIZE(7,SPEED) BROWSE INCDIR(..\
                    -..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\ISP_UART0_main_autosize.lst) TABS(2
                    -) OBJECT(.\Output\ISP_UART0_main_autosize.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2021 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: MUG51 UART0 ISP demo code
  10          //********************************************************************************************************
             -***
  11          #include "MUG51.h"
  12          #include "isp_uart0.h"
*** WARNING C317 IN LINE 24 OF ..\isp_uart0.h: attempt to redefine macro 'PAGE_SIZE'
  13          
  14          //#define  isp_with_wdt
  15          unsigned int xdata start_address,u16_addr;
  16          /*********************************************************************************************************
             -***
  17          *    Main function 
  18          **********************************************************************************************************
             -**/
  19          void main (void)
  20          {
  21   1      
  22   1        set_CHPCON_IAPEN;  
  23   1        TA=0X55;TA=0XAA;WDCON=0x07;
  24   1      //uart initial for ISP programmer GUI, always use 115200 baudrate
  25   1        UART0_ini_115200_24MHz();
  26   1        TM0_ini();
  27   1      
  28   1        g_timer0Over=0;
  29   1        g_timer0Counter=Timer0Out_Counter;
  30   1        g_programflag=0;
  31   1      
  32   1      while(1)
  33   1      {
  34   2              if(bUartDataReady == TRUE)
  35   2              {
  36   3                EA=0; //DISABLE ALL INTERRUPT
  37   3                if(g_programflag==1)
  38   3                {
  39   4                  for(count=8;count<64;count++)
  40   4                  {
  41   5                    g_timer0Counter=Timer0Out_Counter;
  42   5                    IAPCN = BYTE_PROGRAM_AP;          //program byte
  43   5                    IAPAL = flash_address&0xff;
C51 COMPILER V9.52.0.0   ISP_UART0_MAIN_AUTOSIZE                                           05/07/2021 15:19:32 PAGE 2   

  44   5                    IAPAH = (flash_address>>8)&0xff;
  45   5                    IAPFD=uart_rcvbuf[count];
  46   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
  49   5                    set_IAPTRG_IAPGO;
  50   5      #endif
  51   5                
  52   5                    IAPCN = BYTE_READ_AP;              //program byte verify
  53   5                    if(IAPFD!=uart_rcvbuf[count])
  54   5                    while(1);                          
  55   5                    if (CHPCON==0x43)              //if error flag set, program error stop ISP
  56   5                    while(1);
  57   5                    
  58   5                    g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
  59   5                    flash_address++;
  60   5        
  61   5                    if(flash_address==AP_size)
  62   5                    {
  63   6                       g_programflag=0;
  64   6                       g_timer0Over =1;
  65   6                       goto END_2;
  66   6                    }
  67   5                  } 
  68   4      END_2:                
  69   4                  Package_checksum();
  70   4                  uart_txbuf[8]=g_totalchecksum&0xff;
  71   4                  uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
  72   4                  Send_64byte_To_UART0();
  73   4      
  74   4                }
  75   3                  
  76   3                switch(uart_rcvbuf[0])
  77   3                {                
  78   4                  case CMD_CONNECT:
  79   4                  case CMD_SYNC_PACKNO:
  80   4                  {
  81   5                    Package_checksum();
  82   5                    Send_64byte_To_UART0();    
  83   5                    g_timer0Counter=0; //clear timer 0 for no reset
  84   5                    g_timer0Over=0;
  85   5                  break;
  86   5                  }
  87   4      
  88   4                  case CMD_GET_FWVER:
  89   4                  {
  90   5                    Package_checksum();
  91   5                    uart_txbuf[8]=FW_VERSION;  
  92   5                    Send_64byte_To_UART0();  
  93   5                  break;
  94   5                  }
  95   4                  
  96   4                  case CMD_RUN_APROM:
  97   4                  {
  98   5                    goto _APROM;
  99   5                  break;
 100   5                  }
 101   4      
 102   4                  //please for ISP programmer GUI, ID always use following rule to transmit.
 103   4                  case CMD_GET_DEVICEID:
 104   4                  {
 105   5                    READ_ID();
C51 COMPILER V9.52.0.0   ISP_UART0_MAIN_AUTOSIZE                                           05/07/2021 15:19:32 PAGE 3   

 106   5                    Package_checksum();
 107   5                    uart_txbuf[8]=DID_lowB;  
 108   5                    uart_txbuf[9]=DID_highB;  
 109   5                    uart_txbuf[10]=PID_lowB;  
 110   5                    uart_txbuf[11]=PID_highB;  
 111   5                    Send_64byte_To_UART0();  
 112   5                  break;
 113   5                  }
 114   4                  case CMD_ERASE_ALL:
 115   4                  {
 116   5      //              set_CHPCON_IAPEN;
 117   5                    set_IAPUEN_APUEN;
 118   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 119   5                    IAPCN = PAGE_ERASE_AP;
 120   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 121   5                    {        
 122   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 123   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 124   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 127   6                    set_IAPTRG_IAPGO;
 128   6      #endif
 129   6                    }
 130   5                    Package_checksum();
 131   5                    Send_64byte_To_UART0();  
 132   5                    break;
 133   5                  }
 134   4                  case CMD_READ_CONFIG:
 135   4                  {
 136   5                    READ_CONFIG();
 137   5                    Package_checksum();
 138   5                    uart_txbuf[8]=CONF0;
 139   5                    uart_txbuf[9]=CONF1;
 140   5                    uart_txbuf[10]=CONF2;
 141   5                    uart_txbuf[11]=0xff;
 142   5                    uart_txbuf[12]=CONF4;
 143   5                    uart_txbuf[13]=0xff;
 144   5                    uart_txbuf[14]=0xff;
 145   5                    uart_txbuf[15]=0xff;
 146   5                    Send_64byte_To_UART0();
 147   5                  break;
 148   5                  }
 149   4                  
 150   4                  case CMD_UPDATE_CONFIG:
 151   4                  {
 152   5                    recv_CONF0 = uart_rcvbuf[8];
 153   5                    recv_CONF1 = uart_rcvbuf[9];
 154   5                    recv_CONF2 = uart_rcvbuf[10];
 155   5                    recv_CONF4 = uart_rcvbuf[12];
 156   5      /*Erase CONFIG */              
 157   5      //              set_CHPCON_IAPEN;
 158   5                    set_IAPUEN_CFUEN;
 159   5                    IAPCN = PAGE_ERASE_CONFIG;
 160   5                    IAPAL = 0x00;
 161   5                    IAPAH = 0x00;
 162   5                    IAPFD = 0xFF;
 163   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 166   5                    set_IAPTRG_IAPGO;
 167   5      #endif
C51 COMPILER V9.52.0.0   ISP_UART0_MAIN_AUTOSIZE                                           05/07/2021 15:19:32 PAGE 4   

 168   5      /*Program CONFIG*/  
 169   5                    IAPCN = BYTE_PROGRAM_CONFIG;
 170   5                    IAPAL = 0x00;
 171   5                    IAPAH = 0x00;
 172   5                    IAPFD = recv_CONF0;
 173   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 176   5                    set_IAPTRG_IAPGO;
 177   5      #endif
 178   5                    IAPFD = recv_CONF1;
 179   5                    IAPAL = 0x01;
 180   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 183   5                    set_IAPTRG_IAPGO;
 184   5      #endif
 185   5                    IAPAL = 0x02;
 186   5                    IAPFD = recv_CONF2;
 187   5        #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 190   5                    set_IAPTRG_IAPGO;
 191   5      #endif
 192   5                    IAPAL = 0x04;
 193   5                    IAPFD = recv_CONF4;
 194   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 197   5                    set_IAPTRG_IAPGO;
 198   5      #endif
 199   5                    clr_IAPUEN_CFUEN;
 200   5      /*Read new CONFIG*/  
 201   5                    READ_CONFIG();
 202   5                    Package_checksum();
 203   5                    uart_txbuf[8]=CONF0;
 204   5                    uart_txbuf[9]=CONF1;
 205   5                    uart_txbuf[10]=CONF2;
 206   5                    uart_txbuf[11]=0xff;
 207   5                    uart_txbuf[12]=CONF4;
 208   5                    uart_txbuf[13]=0xff;
 209   5                    uart_txbuf[14]=0xff;
 210   5                    uart_txbuf[15]=0xff;
 211   5                    Send_64byte_To_UART0();
 212   5                    break;
 213   5                  }
 214   4                  
 215   4                  case CMD_UPDATE_APROM:
 216   4                  {
 217   5                    g_timer0Counter=Timer0Out_Counter;
 218   5      //              set_CHPCON_IAPEN;
 219   5                    set_IAPUEN_APUEN;
 220   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 221   5                    IAPCN = PAGE_ERASE_AP;
 222   5                    
 223   5                    start_address = 0;
 224   5                    start_address = uart_rcvbuf[8];
 225   5                    start_address |= ((uart_rcvbuf[9]<<8)&0xFF00);
 226   5                    
 227   5                    AP_size = 0;
 228   5                    AP_size = uart_rcvbuf[12];
 229   5                    AP_size |= ((uart_rcvbuf[13]<<8)&0xFF00);
C51 COMPILER V9.52.0.0   ISP_UART0_MAIN_AUTOSIZE                                           05/07/2021 15:19:32 PAGE 5   

 230   5      
 231   5                    u16_addr = start_address + AP_size;
 232   5                    flash_address = (start_address&0xFF00);
 233   5       
 234   5                    while(flash_address< u16_addr)
 235   5                    {
 236   6                      IAPAL = LOBYTE(flash_address);
 237   6                      IAPAH = HIBYTE(flash_address);
 238   6      #ifdef isp_with_wdt
                              set_IAPTRG_IAPGO_WDCLR;
              #else
 241   6                      set_IAPTRG_IAPGO;
 242   6      #endif
 243   6                      flash_address += PAGE_SIZE;
 244   6                    }
 245   5                    
 246   5                    g_totalchecksum = 0;
 247   5                    flash_address = start_address;
 248   5                    g_programflag = 1;
 249   5      
 250   5                    for(count=16;count<64;count++)
 251   5                    {
 252   6                      IAPCN = BYTE_PROGRAM_AP;
 253   6                      IAPAL = flash_address&0xff;
 254   6                      IAPAH = (flash_address>>8)&0xff;
 255   6                      IAPFD = uart_rcvbuf[count];
 256   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 259   6                    set_IAPTRG_IAPGO;
 260   6      #endif
 261   6                      IAPCN = BYTE_READ_AP;                //program byte verify
 262   6                      set_IAPTRG_IAPGO;
 263   6      
 264   6                      if(IAPFD!=uart_rcvbuf[count])
 265   6                      while(1);          
 266   6                      if (CHPCON==0x43)                //if error flag set, program error stop ISP
 267   6                      while(1);
 268   6                      
 269   6                      g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
 270   6                      flash_address++;
 271   6      
 272   6                      if(flash_address==AP_size)
 273   6                      {
 274   7                        g_programflag=0;
 275   7                         goto END_1;
 276   7                      }
 277   6                    }
 278   5      END_1:                
 279   5                    Package_checksum();
 280   5                    uart_txbuf[8]=g_totalchecksum&0xff;
 281   5                    uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
 282   5                    Send_64byte_To_UART0();  
 283   5                    break;
 284   5                  }
 285   4                }  
 286   3                bUartDataReady = FALSE;
 287   3                bufhead = 0;
 288   3      
 289   3                EA=1;
 290   3            }
 291   2            //For connect timer out  
C51 COMPILER V9.52.0.0   ISP_UART0_MAIN_AUTOSIZE                                           05/07/2021 15:19:32 PAGE 6   

 292   2            if(g_timer0Over==1)
 293   2            {
 294   3              _nop_();
 295   3             goto _APROM;
 296   3            }
 297   2            
 298   2            //for uart time out or buffer error
 299   2             if(g_timer1Over==1)
 300   2            {       
 301   3             if((bufhead<64)&&(bufhead>0)||(bufhead>64))
 302   3               {
 303   4                   bufhead=0;         
 304   4               }
 305   3            }  
 306   2      }   
 307   1      
 308   1      _APROM:
 309   1          clr_CHPCON_IAPEN;
 310   1          TA = 0xAA;
 311   1          TA = 0x55;
 312   1          CHPCON &= 0xFD;                  //set boot from AP
 313   1          TA = 0xAA;
 314   1          TA = 0x55;
 315   1          CHPCON |= 0x80;                   //software reset enable
 316   1      
 317   1          /* Trap the CPU */
 318   1          while(1);  
 319   1      }
 320          
 321          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1318    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
