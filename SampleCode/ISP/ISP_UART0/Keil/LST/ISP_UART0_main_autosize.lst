C51 COMPILER V9.60.0.0   ISP_UART0_MAIN_AUTOSIZE                                           10/25/2022 13:15:49 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE ISP_UART0_MAIN_AUTOSIZE
OBJECT MODULE PLACED IN .\Output\ISP_UART0_main_autosize.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\ISP_UART0_main_autosize.c LARGE OMF2 OPTIMIZE(7,SPEED) BROWSE INCDIR(
                    -..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT(.\LST\ISP_UART0_main_autosize.lst) TAB
                    -S(2) OBJECT(.\Output\ISP_UART0_main_autosize.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2022 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          
   8          
   9          //********************************************************************************************************
             -***
  10          //  File Function: MUG51 UART0 ISP demo code
  11          //********************************************************************************************************
             -***
  12          #include "MUG51.h"
  13          #include "isp_uart0.h"
  14          
  15          //#define  isp_with_wdt
  16          unsigned int xdata start_address,u16_addr;
  17          /*********************************************************************************************************
             -***
  18          *    Main function 
  19          **********************************************************************************************************
             -**/
  20          void main (void)
  21          {
  22   1        set_CHPCON_IAPEN;
  23   1        
  24   1      #ifdef  isp_with_wdt
                TA=0X55;TA=0XAA;WDCON=0x07;
                #endif
  27   1      
  28   1      //uart initial for ISP programmer GUI, always use 115200 baudrate
  29   1        UART0_ini_115200_7_3728Hz();
  30   1        TM0_ini();
  31   1      
  32   1        g_timer0Over=0;
  33   1        g_timer0Counter=Timer0Out_Counter;
  34   1        g_programflag=0;
  35   1      
  36   1      while(1)
  37   1      {
  38   2              if(bUartDataReady == TRUE)
  39   2              {
  40   3                EA=0;
  41   3                if(g_programflag==1)
  42   3                {
  43   4                  for(count=8;count<64;count++)
C51 COMPILER V9.60.0.0   ISP_UART0_MAIN_AUTOSIZE                                           10/25/2022 13:15:49 PAGE 2   

  44   4                  {
  45   5                    g_timer0Counter=Timer0Out_Counter;
  46   5                    IAPCN = BYTE_PROGRAM_AP;          //program byte
  47   5                    IAPAL = flash_address&0xff;
  48   5                    IAPAH = (flash_address>>8)&0xff;
  49   5                    IAPFD = uart_rcvbuf[count];
  50   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
  53   5                    set_IAPTRG_IAPGO;
  54   5      #endif
  55   5                
  56   5                    IAPCN = BYTE_READ_AP;              //program byte verify
  57   5                    if(IAPFD!=uart_rcvbuf[count])
  58   5                    while(1);                          
  59   5      //              if (CHPCON==0x43)              //if error flag set, program error stop ISP
  60   5      //              while(1);
  61   5                    
  62   5                    g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
  63   5                    flash_address++;
  64   5        
  65   5                    if(flash_address==AP_size)
  66   5                    {
  67   6                       g_programflag=0;
  68   6                       g_timer0Over =1;
  69   6                       goto END_2;
  70   6                    }
  71   5                  } 
  72   4      END_2:                
  73   4                  Package_checksum();
  74   4                  uart_txbuf[8]=g_totalchecksum&0xff;
  75   4                  uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
  76   4                  Send_64byte_To_UART0();
  77   4                }
  78   3                  
  79   3                switch(uart_rcvbuf[0])
  80   3                {                
  81   4                  case CMD_CONNECT:
  82   4                  case CMD_SYNC_PACKNO:
  83   4                  {
  84   5                    Package_checksum();
  85   5                    Send_64byte_To_UART0();
  86   5                    g_timer0Counter=0; //clear timer 0 for no reset
  87   5                    g_timer0Over=0;
  88   5                  break;
  89   5                  }
  90   4      
  91   4                  case CMD_GET_FWVER:
  92   4                  {
  93   5                    Package_checksum();
  94   5                    uart_txbuf[8]=FW_VERSION;
  95   5                    Send_64byte_To_UART0();
  96   5                  break;
  97   5                  }
  98   4                  
  99   4                  case CMD_RUN_APROM:
 100   4                  {
 101   5                    goto _APROM;
 102   5                  break;
 103   5                  }
 104   4      
 105   4                  //please for ISP programmer GUI, ID always use following rule to transmit.
C51 COMPILER V9.60.0.0   ISP_UART0_MAIN_AUTOSIZE                                           10/25/2022 13:15:49 PAGE 3   

 106   4                  case CMD_GET_DEVICEID:
 107   4                  {
 108   5                    READ_ID();
 109   5                    Package_checksum();
 110   5                    uart_txbuf[8]=DID_lowB;
 111   5                    uart_txbuf[9]=DID_highB;
 112   5                    uart_txbuf[10]=PID_lowB;
 113   5                    uart_txbuf[11]=PID_highB;
 114   5                    Send_64byte_To_UART0();
 115   5                  break;
 116   5                  }
 117   4                  case CMD_ERASE_ALL:
 118   4                  {
 119   5      //              set_CHPCON_IAPEN;
 120   5                    set_IAPUEN_APUEN;
 121   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 122   5                    IAPCN = PAGE_ERASE_AP;
 123   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 124   5                    {        
 125   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 126   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 127   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 130   6                    set_IAPTRG_IAPGO;
 131   6      #endif
 132   6                    }
 133   5                    Package_checksum();
 134   5                    Send_64byte_To_UART0();  
 135   5                    break;
 136   5                  }
 137   4                  case CMD_READ_CONFIG:
 138   4                  {
 139   5                    READ_CONFIG();
 140   5                    Package_checksum();
 141   5                    uart_txbuf[8]=CONF0;
 142   5                    uart_txbuf[9]=CONF1;
 143   5                    uart_txbuf[10]=CONF2;
 144   5                    uart_txbuf[11]=0xff;
 145   5                    uart_txbuf[12]=CONF4;
 146   5                    uart_txbuf[13]=0xff;
 147   5                    uart_txbuf[14]=0xff;
 148   5                    uart_txbuf[15]=0xff;
 149   5                    Send_64byte_To_UART0();
 150   5                  break;
 151   5                  }
 152   4                  
 153   4                  case CMD_UPDATE_CONFIG:
 154   4                  {
 155   5                    recv_CONF0 = uart_rcvbuf[8];
 156   5                    recv_CONF1 = uart_rcvbuf[9];
 157   5                    recv_CONF2 = uart_rcvbuf[10];
 158   5                    recv_CONF4 = uart_rcvbuf[12];
 159   5      /*Erase CONFIG */
 160   5      //              set_CHPCON_IAPEN;
 161   5                    set_IAPUEN_CFUEN;
 162   5                    IAPCN = PAGE_ERASE_CONFIG;
 163   5                    IAPAL = 0x00;
 164   5                    IAPAH = 0x00;
 165   5                    IAPFD = 0xFF;
 166   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
C51 COMPILER V9.60.0.0   ISP_UART0_MAIN_AUTOSIZE                                           10/25/2022 13:15:49 PAGE 4   

              #else
 169   5                    set_IAPTRG_IAPGO;
 170   5      #endif
 171   5      /*Program CONFIG*/  
 172   5                    IAPCN = BYTE_PROGRAM_CONFIG;
 173   5                    IAPAL = 0x00;
 174   5                    IAPAH = 0x00;
 175   5                    IAPFD = recv_CONF0;
 176   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 179   5                    set_IAPTRG_IAPGO;
 180   5      #endif
 181   5                    IAPFD = recv_CONF1;
 182   5                    IAPAL = 0x01;
 183   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 186   5                    set_IAPTRG_IAPGO;
 187   5      #endif
 188   5                    IAPAL = 0x02;
 189   5                    IAPFD = recv_CONF2;
 190   5        #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 193   5                    set_IAPTRG_IAPGO;
 194   5      #endif
 195   5                    IAPAL = 0x04;
 196   5                    IAPFD = recv_CONF4;
 197   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 200   5                    set_IAPTRG_IAPGO;
 201   5      #endif
 202   5                    clr_IAPUEN_CFUEN;
 203   5      /*Read new CONFIG*/  
 204   5                    READ_CONFIG();
 205   5                    Package_checksum();
 206   5                    uart_txbuf[8]=CONF0;
 207   5                    uart_txbuf[9]=CONF1;
 208   5                    uart_txbuf[10]=CONF2;
 209   5                    uart_txbuf[11]=0xff;
 210   5                    uart_txbuf[12]=CONF4;
 211   5                    uart_txbuf[13]=0xff;
 212   5                    uart_txbuf[14]=0xff;
 213   5                    uart_txbuf[15]=0xff;
 214   5                    Send_64byte_To_UART0();
 215   5                    break;
 216   5                  }
 217   4                  
 218   4                  case CMD_UPDATE_APROM:
 219   4                  {
 220   5                    g_timer0Counter=Timer0Out_Counter;
 221   5      //              set_CHPCON_IAPEN;
 222   5                    set_IAPUEN_APUEN;
 223   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 224   5                    IAPCN = PAGE_ERASE_AP;
 225   5                    
 226   5                    start_address = 0;
 227   5                    start_address = uart_rcvbuf[8];
 228   5                    start_address |= ((uart_rcvbuf[9]<<8)&0xFF00);
 229   5                    
C51 COMPILER V9.60.0.0   ISP_UART0_MAIN_AUTOSIZE                                           10/25/2022 13:15:49 PAGE 5   

 230   5                    AP_size = 0;
 231   5                    AP_size = uart_rcvbuf[12];
 232   5                    AP_size |= ((uart_rcvbuf[13]<<8)&0xFF00);
 233   5      
 234   5                    u16_addr = start_address + AP_size;
 235   5                    flash_address = (start_address&0xFF00);
 236   5       
 237   5                    while(flash_address< u16_addr)
 238   5                    {
 239   6                      IAPAL = LOBYTE(flash_address);
 240   6                      IAPAH = HIBYTE(flash_address);
 241   6      #ifdef isp_with_wdt
                              set_IAPTRG_IAPGO_WDCLR;
              #else
 244   6                      set_IAPTRG_IAPGO;
 245   6      #endif
 246   6                      flash_address += PAGE_SIZE;
 247   6                    }
 248   5                    
 249   5                    g_totalchecksum = 0;
 250   5                    flash_address = start_address;
 251   5                    g_programflag = 1;
 252   5      
 253   5                    for(count=16;count<64;count++)
 254   5                    {
 255   6                      IAPCN = BYTE_PROGRAM_AP;
 256   6                      IAPAL = flash_address&0xff;
 257   6                      IAPAH = (flash_address>>8)&0xff;
 258   6                      IAPFD = uart_rcvbuf[count];
 259   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 262   6                    set_IAPTRG_IAPGO;
 263   6      #endif
 264   6                      IAPCN = BYTE_READ_AP;                //program byte verify
 265   6                      set_IAPTRG_IAPGO;
 266   6      
 267   6                      if(IAPFD!=uart_rcvbuf[count])
 268   6                      while(1);          
 269   6      //                if (CHPCON==0x43)                //if error flag set, program error stop ISP
 270   6      //                while(1);
 271   6                      
 272   6                      g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
 273   6                      flash_address++;
 274   6      
 275   6                      if(flash_address==AP_size)
 276   6                      {
 277   7                        g_programflag=0;
 278   7                         goto END_1;
 279   7                      }
 280   6                    }
 281   5      END_1:                
 282   5                    Package_checksum();
 283   5                    uart_txbuf[8]=g_totalchecksum&0xff;
 284   5                    uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
 285   5                    Send_64byte_To_UART0();  
 286   5                    break;
 287   5                  }
 288   4                }  
 289   3                bUartDataReady = FALSE;
 290   3                bufhead = 0;
 291   3      
C51 COMPILER V9.60.0.0   ISP_UART0_MAIN_AUTOSIZE                                           10/25/2022 13:15:49 PAGE 6   

 292   3                EA=1;
 293   3            }
 294   2            //For connect timer out  
 295   2            if(g_timer0Over==1)
 296   2            {
 297   3              _nop_();
 298   3             goto _APROM;
 299   3            }
 300   2            
 301   2            //for uart time out or buffer error
 302   2             if(g_timer1Over==1)
 303   2            {       
 304   3             if((bufhead<64)&&(bufhead>0)||(bufhead>64))
 305   3               {
 306   4                   bufhead=0;         
 307   4               }
 308   3            }  
 309   2      }   
 310   1      
 311   1      _APROM:
 312   1          clr_CHPCON_IAPEN;
 313   1          TA = 0xAA;
 314   1          TA = 0x55;
 315   1          CHPCON &= 0xFD;                  //set boot from AP
 316   1          TA = 0xAA;
 317   1          TA = 0x55;
 318   1          CHPCON |= 0x80;                   //software reset enable
 319   1      
 320   1          /* Trap the CPU */
 321   1          while(1);  
 322   1      }
 323          
 324          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1327    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
