C51 COMPILER V9.52.0.0   ISP_UART2_MAIN                                                    05/07/2021 15:19:52 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE ISP_UART2_MAIN
OBJECT MODULE PLACED IN .\Output\ISP_uart2_main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\ISP_uart2_main.c LARGE OMF2 ROM(COMPACT) OPTIMIZE(7,SPEED) BROWSE INCDIR
                    -(..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc;..\..\ISP_UART2) DEBUG PRINT(.\LST\ISP_uart2_main.
                    -lst) TABS(2) OBJECT(.\Output\ISP_uart2_main.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* Copyright(c) 2021 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   4          /*                                                                                                        
             - */
   5          /*--------------------------------------------------------------------------------------------------------
             --*/
   6          
   7          
   8          //********************************************************************************************************
             -***
   9          //  File Function: MUG51 UART0 ISP demo code
  10          //********************************************************************************************************
             -***
  11          #include "MUG51.h"
  12          #include "isp_uart2.h"
  13          
  14          
  15          //#define  isp_with_wdt
  16          unsigned int xdata start_address,u16_addr;
  17          bit BIT_TMP;
  18          /*********************************************************************************************************
             -***
  19          *    Main function 
  20          **********************************************************************************************************
             -**/
  21          void main (void)
  22          {
  23   1         //uart initial for ISP programmer GUI, always use 115200 baudrate
  24   1        UART2_ini_115200();
  25   1        TM0_ini();
  26   1      
  27   1        g_timer0Over=0;
  28   1        g_timer0Counter=5000;
  29   1        g_programflag=0;
  30   1      
  31   1        set_CHPCON_IAPEN;
  32   1      while(1)
  33   1      {
  34   2              if(bUartDataReady == TRUE)
  35   2              {
  36   3                EA=0; //DISABLE ALL INTERRUPT                  
  37   3                if(g_programflag==1)
  38   3                {
  39   4                  for(count=8;count<64;count++)
  40   4                  {
  41   5                    IAPCN = BYTE_PROGRAM_AP;          //program byte
  42   5                    IAPAL = flash_address&0xff;
  43   5                    IAPAH = (flash_address>>8)&0xff;
  44   5                    IAPFD=uart_rcvbuf[count];
C51 COMPILER V9.52.0.0   ISP_UART2_MAIN                                                    05/07/2021 15:19:52 PAGE 2   

  45   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
  48   5                    set_IAPTRG_IAPGO;
  49   5      #endif
  50   5      
  51   5                    IAPCN = BYTE_READ_AP;              //program byte verify
  52   5                    set_IAPTRG_IAPGO;
  53   5                    if(IAPFD!=uart_rcvbuf[count])
  54   5                    while(1);                          
  55   5                    if (CHPCON==0x43)              //if error flag set, program error stop ISP
  56   5                    while(1);
  57   5                    
  58   5                    g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
  59   5                    flash_address++;
  60   5        
  61   5                    if(flash_address==AP_size)
  62   5                    {
  63   6                      g_programflag=0;
  64   6                       goto END_2;          
  65   6                    }
  66   5                  } 
  67   4      END_2:                
  68   4                  Package_checksum();
  69   4                  uart_txbuf[8]=g_totalchecksum&0xff;
  70   4                  uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
  71   4                  Send_64byte_To_UART2();
  72   4                  
  73   4                }
  74   3                  
  75   3                switch(uart_rcvbuf[0])
  76   3                {                
  77   4                  case CMD_CONNECT:
  78   4                  case CMD_SYNC_PACKNO:
  79   4                  {
  80   5                    Package_checksum();
  81   5                    Send_64byte_To_UART2();    
  82   5                    g_timer0Counter=0; //clear timer 0 for no reset
  83   5                    g_timer0Over=0;
  84   5                  break;
  85   5                  }
  86   4                              
  87   4                  case CMD_GET_FWVER:
  88   4                  {
  89   5                    Package_checksum();
  90   5                    uart_txbuf[8]=FW_VERSION;  
  91   5                    Send_64byte_To_UART2();  
  92   5                  break;
  93   5                  }
  94   4                  
  95   4                  case CMD_RUN_APROM:
  96   4                  {
  97   5                    goto _APROM;
  98   5                  break;
  99   5                  }
 100   4          
 101   4                  //please for ISP programmer GUI, ID always use following rule to transmit.
 102   4                  case CMD_GET_DEVICEID:
 103   4                  {
 104   5                    READ_ID();
 105   5                    Package_checksum();
 106   5                    uart_txbuf[8]=DID_lowB;  
C51 COMPILER V9.52.0.0   ISP_UART2_MAIN                                                    05/07/2021 15:19:52 PAGE 3   

 107   5                    uart_txbuf[9]=DID_highB;  
 108   5                    uart_txbuf[10]=PID_lowB;  
 109   5                    uart_txbuf[11]=PID_highB;  
 110   5                    Send_64byte_To_UART2();  
 111   5                  break;
 112   5                  }
 113   4                  
 114   4                  case CMD_ERASE_ALL:
 115   4                  {
 116   5      //              set_CHPCON_IAPEN;
 117   5                    set_IAPUEN_APUEN;
 118   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 119   5                    IAPCN = PAGE_ERASE_AP;
 120   5                    
 121   5                    for(flash_address=0x0000;flash_address<APROM_SIZE/PAGE_SIZE;flash_address++)
 122   5                    {        
 123   6                      IAPAL = LOBYTE(flash_address*PAGE_SIZE);
 124   6                      IAPAH = HIBYTE(flash_address*PAGE_SIZE);
 125   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 128   6                    set_IAPTRG_IAPGO;
 129   6      #endif
 130   6                    }
 131   5                    
 132   5                    Package_checksum();
 133   5                    Send_64byte_To_UART2();  
 134   5                    break;
 135   5                  }
 136   4                  case CMD_READ_CONFIG:
 137   4                  {
 138   5                    READ_CONFIG();
 139   5                    Package_checksum();
 140   5                    uart_txbuf[8]=CONF0;  
 141   5                    uart_txbuf[9]=CONF1;  
 142   5                    uart_txbuf[10]=CONF2;  
 143   5                    uart_txbuf[11]=0xff;  
 144   5                    uart_txbuf[12]=CONF4;  
 145   5                    uart_txbuf[13]=0xff;  
 146   5                    uart_txbuf[14]=0xff;
 147   5                    uart_txbuf[15]=0xff;
 148   5                    Send_64byte_To_UART2();  
 149   5                  break;
 150   5                  }
 151   4                  
 152   4                  case CMD_UPDATE_CONFIG:
 153   4                  {
 154   5                    recv_CONF0 = uart_rcvbuf[8];
 155   5                    recv_CONF1 = uart_rcvbuf[9];
 156   5                    recv_CONF2 = uart_rcvbuf[10];
 157   5                    recv_CONF4 = uart_rcvbuf[12];
 158   5      /*Erase CONFIG */
 159   5      //              set_CHPCON_IAPEN;
 160   5                    set_IAPUEN_CFUEN;
 161   5                    IAPCN = PAGE_ERASE_CONFIG;
 162   5                    IAPAL = 0x00;
 163   5                    IAPAH = 0x00;
 164   5                    IAPFD = 0xFF;
 165   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 168   5                    set_IAPTRG_IAPGO;
C51 COMPILER V9.52.0.0   ISP_UART2_MAIN                                                    05/07/2021 15:19:52 PAGE 4   

 169   5      #endif
 170   5      /*Program CONFIG*/  
 171   5                    IAPCN = BYTE_PROGRAM_CONFIG;
 172   5      //              IAPAL = 0x00;
 173   5      //              IAPAH = 0x00;
 174   5                    IAPFD = recv_CONF0;
 175   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 178   5                    set_IAPTRG_IAPGO;
 179   5      #endif
 180   5                    IAPFD = recv_CONF1;
 181   5                    IAPAL = 0x01;
 182   5       #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 185   5                    set_IAPTRG_IAPGO;
 186   5      #endif
 187   5                    IAPAL = 0x02;
 188   5                    IAPFD = recv_CONF2;
 189   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 192   5                    set_IAPTRG_IAPGO;
 193   5      #endif
 194   5                    IAPAL = 0x04;
 195   5                    IAPFD = recv_CONF4;
 196   5      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 199   5                    set_IAPTRG_IAPGO;
 200   5      #endif
 201   5                    clr_IAPUEN_CFUEN;
 202   5      /*Read new CONFIG*/  
 203   5                    READ_CONFIG();
 204   5                    
 205   5                    Package_checksum();
 206   5                    uart_txbuf[8]=CONF0;
 207   5                    uart_txbuf[9]=CONF1;
 208   5                    uart_txbuf[10]=CONF2;
 209   5                    uart_txbuf[11]=0xff;
 210   5                    uart_txbuf[12]=CONF4;
 211   5                    uart_txbuf[13]=0xff;
 212   5                    uart_txbuf[14]=0xff;
 213   5                    uart_txbuf[15]=0xff;
 214   5                    Send_64byte_To_UART2();
 215   5                    break;
 216   5                  }
 217   4                  
 218   4                  case CMD_UPDATE_APROM:
 219   4                  {
 220   5      //              set_CHPCON_IAPEN;
 221   5                    set_IAPUEN_APUEN;
 222   5                    IAPFD = 0xFF;          //Erase must set IAPFD = 0xFF
 223   5                    IAPCN = PAGE_ERASE_AP;
 224   5                    
 225   5                    start_address = 0;
 226   5                    start_address = uart_rcvbuf[8];
 227   5                    start_address |= ((uart_rcvbuf[9]<<8)&0xFF00);
 228   5                    
 229   5                    AP_size = 0;
 230   5                    AP_size = uart_rcvbuf[12];
C51 COMPILER V9.52.0.0   ISP_UART2_MAIN                                                    05/07/2021 15:19:52 PAGE 5   

 231   5                    AP_size |= ((uart_rcvbuf[13]<<8)&0xFF00);
 232   5      
 233   5                    u16_addr = start_address + AP_size;
 234   5                    flash_address = (start_address&0xFF00);
 235   5       
 236   5                    while(flash_address< u16_addr)
 237   5                    {
 238   6                      IAPAL = LOBYTE(flash_address);
 239   6                      IAPAH = HIBYTE(flash_address);
 240   6      #ifdef isp_with_wdt
                              set_IAPTRG_IAPGO_WDCLR;
              #else
 243   6                      set_IAPTRG_IAPGO;
 244   6      #endif
 245   6                      flash_address += PAGE_SIZE;
 246   6                    }
 247   5                    
 248   5                    g_totalchecksum = 0;
 249   5                    flash_address = start_address;
 250   5                    g_programflag = 1;
 251   5      
 252   5                    for(count=16;count<64;count++)
 253   5                    {
 254   6                      IAPCN = BYTE_PROGRAM_AP;
 255   6                      IAPAL = flash_address;
 256   6                      IAPAH = ((flash_address&0xff00)>>8);
 257   6                      IAPFD = uart_rcvbuf[count];
 258   6      #ifdef isp_with_wdt
                            set_IAPTRG_IAPGO_WDCLR;
              #else
 261   6                    set_IAPTRG_IAPGO;
 262   6      #endif
 263   6                      IAPCN = BYTE_READ_AP;                //program byte verify
 264   6                      set_IAPTRG_IAPGO;
 265   6      
 266   6                      if(IAPFD!=uart_rcvbuf[count])
 267   6                      while(1);
 268   6                      if (CHPCON==0x43)                //if error flag set, program error stop ISP
 269   6                      while(1);
 270   6                      
 271   6                      g_totalchecksum=g_totalchecksum+uart_rcvbuf[count];
 272   6                      flash_address++;
 273   6                      
 274   6                      if(flash_address==AP_size)
 275   6                      {
 276   7                        g_programflag=0;
 277   7                         goto END_1;
 278   7                      }
 279   6                    }
 280   5      END_1:                
 281   5                    Package_checksum();
 282   5                    uart_txbuf[8]=g_totalchecksum&0xff;
 283   5                    uart_txbuf[9]=(g_totalchecksum>>8)&0xff;
 284   5                    Send_64byte_To_UART2();  
 285   5                    break;
 286   5                  }
 287   4                }  
 288   3                bUartDataReady = FALSE;
 289   3                bufhead = 0;            
 290   3                EA=1;
 291   3            }
 292   2            //For connect timer out  
C51 COMPILER V9.52.0.0   ISP_UART2_MAIN                                                    05/07/2021 15:19:52 PAGE 6   

 293   2            if(g_timer0Over==1)
 294   2            {       
 295   3             goto _APROM;
 296   3            }
 297   2            
 298   2            //for uart time out or buffer error
 299   2             if(g_timer1Over==1)
 300   2            {       
 301   3             if((bufhead<64)&&(bufhead>0)||(bufhead>64))
 302   3               {
 303   4               bufhead=0;         
 304   4               }
 305   3            }  
 306   2      
 307   2      }   
 308   1      
 309   1      _APROM:
 310   1          clr_CHPCON_IAPEN;
 311   1          TA = 0xAA;
 312   1          TA = 0x55;
 313   1          CHPCON &= 0xFD;                  //set boot from AP
 314   1          TA = 0xAA;
 315   1          TA = 0x55;
 316   1          CHPCON |= 0x80;                  //software reset enable
 317   1      
 318   1          /* Trap the CPU */
 319   1          while(1);  
 320   1      }
 321          
 322          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1282    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      4    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
